actor LDZombiemanRPG : LDZombieman Replaces DRPGZombieman
{
    Tag "Former Human"
    
    States
    {
    Spawn:
        POSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        POSS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDShotgunguyRPG : LDShotgunguy Replaces DRPGShotgunguy
{
    Tag "Former Sergeant"
    
    States
    {
    Spawn:
        SPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SPOS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDChaingunguyRPG : LDChaingunguy Replaces DRPGChaingunguy
{
    Tag "Former Commando"
    
    States
    {
    Spawn:
        CPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        CPOS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDDoomImpRPG : LDDoomImp Replaces DRPGDoomImp
{
    Tag "Imp"
    
    States
    {
    Spawn:
        TROO A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        TROO A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDDemonRPG : LDDemon Replaces DRPGDemon
{
    Tag "Demon"
    
    States
    {
    Spawn:
        SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SARG A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDSpectreRPG : LDSpectre Replaces DRPGSpectre
{
    Tag "Spectre"
    
    States
    {
    Spawn:
        SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SARG A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDCacodemonRPG : LDCacodemon Replaces DRPGCacodemon
{
    Tag "Cacodemon"
    
    States
    {
    Spawn:
        HEAD A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        HEAD A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDHellKnightRPG : LDHellKnight Replaces DRPGHellKnight
{
    Tag "Hell Knight"
    
    States
    {
    Spawn:
        BOS2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BOS2 A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDBaronOfHellRPG : LDBaronOfHell Replaces DRPGBaronOfHell
{
    Tag "Baron of Hell"
    
    States
    {
    Spawn:
        BOSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BOSS A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDLostSoulRPG : LDLostSoul Replaces DRPGLostSoul
{
    Tag "Lost Soul"
    
    States
    {
    Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
        Goto Super::Spawn
    See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
        Goto Super::See
    }
}

actor LDPainElementalRPG : LDPainElemental Replaces DRPGPainElemental
{
    Tag "Pain Elemental"
    
    States
    {
    Spawn:
        PAIN A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        PAIN A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDRevenantRPG : LDRevenant Replaces DRPGRevenant
{
    Tag "Revenant"
    
    States
    {
    Spawn:
        SKEL A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        SKEL A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDMancubusRPG : LDMancubus Replaces DRPGFatso
{
    Tag "Mancubus"
    
    States
    {
    Spawn:
        FATT A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        FATT A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDArachnotronRPG : LDArachnotron Replaces DRPGArachnotron
{
    Tag "Arachnotron"
    
    States
    {
    Spawn:
        BSPI A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        BSPI A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDArchvileRPG : LDArchvile Replaces DRPGArchvile
{
    Tag "Archvile"
    
    States
    {
    Spawn:
        VILE A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::Spawn
    See:
        VILE A 0 ACS_NamedExecuteAlways("MonsterInit", 0)
        Goto Super::See
    }
}

actor LDCyberdemonRPG : LDCyberdemon Replaces DRPGCyberdemon
{
    Tag "Cyberdemon"
    
    States
    {
    Spawn:
        CYBR A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::Spawn
    See:
        CYBR A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::See
    }
}

actor LDSpiderMastermindRPG : LDSpiderMastermind Replaces DRPGSpiderMastermind
{
    Tag "Spider Mastermind"
    
    States
    {
    Spawn:
        SPID A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::Spawn
    See:
        SPID A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_BOSS)
        Goto Super::See
    }
}
