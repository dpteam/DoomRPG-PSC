
//-------------------------------------------------------------------
//		ARMOR BONUSES AND RESTORERS

ACTOR RLArmorBonusPickup : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    Inventory.Pickupmessage "Picked up an armor bonus."
	Inventory.PickupSound "misc/armorbonuspickup"
	Inventory.UseSound ""
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallACS("DRPGCheckTiem"), "DRPGInit")
		TNT1 A 0 A_Jump (256, "SpecialStartCheck")
		Goto SpecialStartCheck
    SpecialStartCheck:
		TNT1 A 0 A_JumpIf(CallACS("DRLA_specialstarts") == 2, "Duke2Stuff")
		TNT1 A 0 A_Jump (256, "SpawnLoop")
		Goto SpawnLoop
	SpawnLoop:
		BON2 ABCDCB 6
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("DRPGDRLAActive",1,"DoorpegShieldCheck")
	DoorpegCheckDone:
    	TNT1 A 0 A_JumpIfInventory ("RLFireShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLTowerShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLBallisticShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLPlasmaShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLRechargeableEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLNanoAblativeArmorToken", 1, "200ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"150ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"200ArmorRepair")
		Goto NotPickup
	100ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus100",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	150ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus150",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	200ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus200",1)
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,2)
		TNT1 A 0 A_Print("Your armor looks better.", 5)
		Stop
		TNT1 A 0 A_Print("Your armor looks good as new!", 5)
		Stop
	NotPickup:
		TNT1 A 0
		Fail
//==============================================================================
	Duke2Stuff:
		"####" "#" 0 A_SpawnItemEx("RLDuke2ArmorCrate",0,0,0, 0,0,0, 0,SXF_NOCHECKPOSITION)
		Stop
//==============================================================================
//					--	DRPG Compatibility Stuff  --
//==============================================================================
	DRPGInit:
		"####" "#" 0 ACS_NamedExecuteAlways("ItemInit", 0)
		"####" "#" 0 A_Jump (256, "SpawnLoop")
		Goto SpawnLoop
		
  DoorpegShieldCheck:
// If shields are active, try and charge them instead of repairing armor.
	TNT1 A 0 A_JumpIf(CallACS("ShieldActive") == 1, "DoorpegShieldRestoration")
	TNT1 A 0 A_Jump (256, "DoorpegCheckDone")
	Goto DoorpegCheckDone
	
  DoorpegShieldRestoration:
	TNT1 A 0 A_JumpIf(CallACS("GetShield") >= CallACS("GetShieldMax"), "DoorpegShieldRestorationFull")
	TNT1 A 0 A_JumpIf(CallACS("GetShieldMax") >= 500, "DoorpegShieldRestoration2")
	TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 50)
	TNT1 A 0 A_Print("\chShield\c- strength restored by \cn50.", 1, "CONFONT")
	Stop
  DoorpegShieldRestoration2:
	TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, CallACS("GetShieldMax") * 0.1)
	TNT1 A 0 A_Print("\chShield\c- strength restored by \cn10%.", 1, "CONFONT")
	Stop
  DoorpegShieldRestorationFull:
	TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup")
	TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
	TNT1 A 0 A_Print("Your \chShields\c- are already full.", 3, "CONFONT")
	Fail
	}
}

ACTOR RLArmorBonusPickupSpecial : RLArmorBonusPickup
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallACS("DRPGCheckTiem"), "DRPGInit")
		TNT1 A 0 A_Jump (256, "SpawnLoop")
		Goto SpawnLoop
	}
}

ACTOR RLArmorBonusNoMessage : RLArmorBonusPickup
{
    Inventory.Pickupmessage ""
	Inventory.PickupSound ""
	Inventory.UseSound ""
	States
	{
	100ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus100",1)
		Stop
	150ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus150",1)
		Stop
	200ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorBonus200",1)
		Stop
	}
}

ACTOR RLArmorBonus100 : ArmorBonus
{
  Radius 20
  Height 16
  Inventory.PickupMessage "Picked up an armor bonus."
  Inventory.Icon "ARM1A0"
  Armor.SavePercent 10
  Armor.SaveAmount 15
  Armor.MaxSaveAmount 100
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  States
  {
  Spawn:
    BON2 ABCDCB 6
    Loop
  }
}

ACTOR RLArmorBonus150 : RLArmorBonus100
{
  Armor.MaxSaveAmount 150
}

ACTOR RLArmorBonus200 : RLArmorBonus100
{
  Armor.MaxSaveAmount 200
}

ACTOR RLArmorBonus100Megasphere : RLArmorBonus100
{
  Armor.SaveAmount 100
}

ACTOR RLArmorBonus150Megasphere : RLArmorBonus150
{
  Armor.SaveAmount 150
}

ACTOR RLArmorBonus200Megasphere : RLArmorBonus200
{
  Armor.SaveAmount 200
}

ACTOR RLArmorRestorer100 : ArmorBonus
{
  Radius 20
  Height 16
  Inventory.PickupMessage ""
  Inventory.Icon "TNT1A0"
  Armor.SavePercent 10
  Armor.SaveAmount 1
  Armor.MaxSaveAmount 100
  -COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  States
  {
  Spawn:
    BON2 ABCDCB 6
    Loop
  }
}

ACTOR RLArmorRestorer150 : RLArmorRestorer100
{
  Armor.MaxSaveAmount 150
}

ACTOR RLArmorRestorer200 : RLArmorRestorer100
{
  Armor.MaxSaveAmount 200
}

ACTOR RLIndestructibleArmorRestorer : RLArmorRestorer100
{
  Armor.SaveAmount 99999
  Armor.MaxSaveAmount 99999
}

ACTOR RLRestorerArmorRepair : CustomInventory
{
	Radius 20
	Height 16
    -COUNTITEM
    +INVENTORY.ALWAYSPICKUP
    Inventory.Pickupmessage ""
	Inventory.PickupSound ""
	Inventory.UseSound ""
	States
	{
	Spawn:
		TNT1 A 1
		Loop
	Pickup:
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("DRPGDRLAActive",1,"DoorpegShieldCheck")
	DoorpegCheckDone:
    	TNT1 A 0 A_JumpIfInventory ("RLFireShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLTowerShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLBallisticShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLPlasmaShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLRechargeableEnergyShieldArmorToken", 1, "NotPickup")
    	TNT1 A 0 A_JumpIfInventory ("RLNanoAblativeArmorToken", 1, "200ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100ArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL100RegenArmorWorn",1,"100ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL150ArmorWorn",1,"150ArmorRepair")
		TNT1 A 0 A_JumpIfInventory("RL200ArmorWorn",1,"200ArmorRepair")
		Goto NotPickup
	100ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",100,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer100",1)
		Stop
	150ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",150,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer150",1)
		Stop
	200ArmorRepair:
		TNT1 A 0 A_JumpIfInventory("BasicArmor",200,"NotPickup")
		TNT1 A 0 A_GiveInventory("RLArmorRestorer200",1)
		Stop
	NotPickup:
		TNT1 A 0
		Fail
//==============================================================================
//					--	DRPG Compatibility Stuff  --
//==============================================================================
  DoorpegShieldCheck:
// If shields are active, try and charge them instead of repairing armor.
	TNT1 A 0 A_JumpIf(CallACS("ShieldActive") == 1, "DoorpegShieldRestoration")
	TNT1 A 0 A_Jump (256, "DoorpegCheckDone")
	Goto DoorpegCheckDone
	
  DoorpegShieldRestoration:
	TNT1 A 0 A_JumpIf(CallACS("GetShield") >= CallACS("GetShieldMax"), "DoorpegShieldRestorationFull")
	TNT1 A 0 A_JumpIf(CallACS("GetShieldMax") >= 100, "DoorpegShieldRestoration2")
	TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 1)
	Stop
  DoorpegShieldRestoration2:
	TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, CallACS("GetShieldMax") * 0.01)
	Stop
  DoorpegShieldRestorationFull:
	TNT1 A 0 A_JumpIfInventory("DRLA_ArmorAntiLogFloodCheck",1,"NotPickup")
	TNT1 A 0 A_GiveInventory("DRLA_ArmorAntiLogFloodCheck")
	TNT1 A 0 A_Print("Your \chShields\c- are already full.", 3, "CONFONT")
	Fail
	}
}

actor RLNecroArmorDamage : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	
	States
	{
	Spawn:
		TNT1 A -1
		Stop
	Pickup:
		TNT1 A 0 A_DamageSelf(1, "Mysterious", DMSS_NOFACTOR | DMSS_NOPROTECT)
		TNT1 AAAAAAAAAA 0 A_GiveInventory("RLArmorRestorer100", 1)
		Stop
	}
}
