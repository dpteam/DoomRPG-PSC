// --------------------------------------------------
// Lost Soul
//

// Lost Soul Spawner
ACTOR Colourset14RPG : Colourset14 Replaces DRPGLostSoul
{
}

// Common Lost Soul
ACTOR CommonLSoulRPG : CommonLSoul Replaces CommonLSoul
{
	Tag "Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Green Lost Soul
ACTOR GreenLSoulRPG : GreenLSoul Replaces GreenLSoul
{
	Tag "Uncommon Lost Soul"
	
	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Cyan Lost Soul
ACTOR CyanLSoul2RPG : CyanLSoul2 Replaces CyanLSoul2
{
	Tag "Icy Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	TNT1 A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	TNT1 A 0 A_ChangeFlag("COUNTKILL", false)
    	TNT1 A 0 A_Jump(256, 2)
    	// Map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	TNT1 A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	TNT1 A 0 A_ChangeFlag("COUNTKILL", false)
    	TNT1 A 0 A_Jump(256, 2)
    	// Map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Blue Lost Soul
ACTOR BlueLSoulRPG : BlueLSoul Replaces BlueLSoul
{
	Tag "Rare Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Fireblu Lost Soul
ACTOR FireBluLSoul2RPG : FireBluLSoul2 Replaces FireBluLSoul2
{
	Tag "Charred Skull"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Purple Lost Soul
ACTOR PurpleLSoulRPG : PurpleLSoul Replaces PurpleLSoul
{
	Tag "Epic Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	SKUL A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	SKUL A 0 A_ChangeFlag("COUNTKILL", false)
    	SKUL A 0 A_Jump(256, 2)
    	// Map-based.
    	SKUL A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Gray Lost Soul
ACTOR GrayLSoul2RPG : GrayLSoul2 Replaces GrayLSoul2
{
	Tag "Hive"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	TNT1 A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	TNT1 A 0 A_ChangeFlag("COUNTKILL", false)
    	TNT1 A 0 A_Jump(256, 2)
    	// Map-based.
    	TNT1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	BAL1 A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	BAL1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	BAL1 A 0 A_ChangeFlag("COUNTKILL", false)
    	BAL1 A 0 A_Jump(256, 2)
    	// Map-based.
    	BAL1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Yellow Lost Soul
ACTOR YellowLSoulRPG : YellowLSoul Replaces YellowLSoul
{
	Tag "Legendary Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	FRGO A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	FRGO A 0 A_ChangeFlag("COUNTKILL", false)
    	FRGO A 0 A_Jump(256, 2)
    	// Map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	FRGO A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	FRGO A 0 A_ChangeFlag("COUNTKILL", false)
    	FRGO A 0 A_Jump(256, 2)
    	// Map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Red Lost Soul
ACTOR RedLSoulRPG : RedLSoul Replaces RedLSoul
{
	Tag "Bloody Lost Soul"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	FRGO A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	FRGO A 0 A_ChangeFlag("COUNTKILL", false)
    	FRGO A 0 A_Jump(256, 2)
    	// Map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	FRGO A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	FRGO A 0 A_ChangeFlag("COUNTKILL", false)
    	FRGO A 0 A_Jump(256, 2)
    	// Map-based.
    	FRGO A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Abyss Lost Soul
ACTOR AbyssLSoul2RPG : AbyssLSoul2 Replaces AbyssLSoul2
{
	Tag "Beetlejuice"

	States
	{
	Spawn:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	BST7 A 0 NoDelay A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	BST7 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	BST7 A 0 A_ChangeFlag("COUNTKILL", false)
    	BST7 A 0 A_Jump(256, 2)
    	// Map-based.
    	BST7 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::Spawn
	See:
    	// ----- Lost Souls that are not map-based should not have their kills and XP taken into account due to possible spawn spam (Pain Elementals for example). ----- //
    	// Check if monster is map-based.
    	BST7 A 0 A_JumpIf(GetLevelSpawnTime() == 0, 4)
    	// Not map-based.
    	BST7 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
    	BST7 A 0 A_ChangeFlag("COUNTKILL", false)
    	BST7 A 0 A_Jump(256, 2)
    	// Map-based.
    	BST7 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOAURA | MF_NODROPS)
        TNT1 A 0
		Goto Super::See
	}
}

// Black Lost Soul
ACTOR BlackLSoul3RPG : BlackLSoul3 Replaces BlackLSoul3
{
	Tag "Queen Bee"

	States
	{
	Spawn:
		WASP A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::Spawn
	See:
		WASP A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::See
	}
}

// And it's spawns
ACTOR BlackLSoul2RPG : BlackLSoul2 Replaces BlackLSoul2
{
	Tag "Bee"
	
	-COUNTKILL

	States
	{
	Spawn:
		WASP A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		TNT1 A 0
		Goto Super::Spawn
	See:
		WASP A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		TNT1 A 0
		Goto Super::See
	}
}

// White Lost Soul
ACTOR WhiteLSoul2RPG : WhiteLSoul2 Replaces WhiteLSoul2
{
	Tag "The Shifter"

	States
	{
	Spawn:
		ETHS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::Spawn
	See:
		ETHS A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::See
	}
}

// White Lost Soul EX
ACTOR WhiteLSoulEXRPG : WhiteLSoulEX Replaces WhiteLSoulEX
{
	Tag "The Vengeful Soul"

	States
	{
	Spawn:
		ETHS A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::Spawn
	See:
		ETHS A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NODROPS | MF_BOSS)
		TNT1 A 0
		Goto Super::See
	}
}

ACTOR HKEggRPG : HKEgg Replaces HKEgg
{
	Tag "Egg"
	
	-COUNTKILL

	States
	{
	Spawn:
		BAL1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		Goto Super::Spawn
	See:
		BAL1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		Goto Super::See
	}
}

ACTOR RevEggRPG : HKEgg Replaces HKEgg
{
	Tag "Egg"
	
	-COUNTKILL

	States
	{
	Spawn:
		BAL1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		Goto Super::Spawn
	See:
		BAL1 A 0 ACS_NamedExecuteAlways("MonsterInit", 0, MF_NOXP | MF_NOAURA | MF_NODROPS)
		Goto Super::See
	}
}
