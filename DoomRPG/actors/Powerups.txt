// Invulnerability Sphere
Actor DRPGInvulnerabilityPower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER

    Powerup.Type Invulnerable
    Powerup.Color 255, 255, 0, 0.015
}

ACTOR DRPGInvulnerabilitySphere : CustomInventory
{
    Tag "Invulnerability Sphere - Invulnerability for 30 seconds"
    
    Inventory.PickupMessage "You got an Invulnerability Sphere!"
    Inventory.PickupSound "powerups/protect"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PINV ABCD 6 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
        TNT1 A 0 A_GiveInventory("DRPGInvulnerabilityPower", 1)
        Stop
    PickupFail:
        TNT1 A 0
        Fail
    }
}

// Invulnerability Charge
Actor DRPGInvulnerabilityChargePower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER

    Powerup.Type Invulnerable
    Powerup.Mode Reflective
    Powerup.Color 255, 255, 0, 0.015
}

actor DRPGInvulnerabilityCharge : CustomInventory
{
    +INVBAR

    Tag "Invulnerability Charge - Reflective Invulnerability for 30 seconds"

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got an Invulnerability Charge!"
    Inventory.PickupSound "powerups/protect"
    Inventory.UseSound "powerups/protect"
    Inventory.Icon "CRG2"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        CRG2 ABC 3 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 0 A_GiveInventory("DRPGInvulnerabilityChargePower", 1)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    } 
}

// Invisibility Sphere
Actor DRPGInvisibilityPower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER

    Powerup.Type Invisibility
}

ACTOR DRPGBlurSphere : CustomInventory
{
    Tag "Blur Sphere - Partial Invisibility for 60 seconds"
    
    +VISIBILITYPULSE
    +FLOATBOB
    -COUNTITEM

    Inventory.PickupMessage "You got an Invisibility Sphere!"
    Inventory.PickupSound "powerups/invis"

    RenderStyle Translucent

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PINS ABCD 6 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "PickupFail")
        TNT1 A 0 A_GiveInventory("DRPGInvisibilityPower", 1)
        Stop
    PickupFail:
        TNT1 A 0
        Fail
    }
}   

// Invisibility Charge
Actor DRPGInvisibilityChargePower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER

    Powerup.Type Invisibility
    Powerup.Mode Translucent
    Powerup.Duration -60
    Powerup.Strength 100
    +GHOST
}

actor DRPGInvisibilityCharge : CustomInventory
{
    +INVBAR

    Tag "Invisibility Charge - Complete Invisibility for 60 seconds"

    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got an Invisibility Charge!"
    Inventory.PickupSound "powerups/invis"
    Inventory.UseSound "powerups/invis"
    Inventory.Icon "CRG1"

    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        CRG1 ABC 3 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 0 A_GiveInventory("DRPGInvisibilityChargePower", 1)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    }
} 

// Time Sphere
actor DRPGTimeFreezer : PowerupGiver
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER
    
    Powerup.Type "TimeFreezer"
    Powerup.Color Black
    Powerup.Duration -10
}

actor DRPGTimeSphere : CustomInventory 25052
{
    Tag "Time Sphere - Stops Time for 10 Seconds"
    
    Scale 0.75  
    
    +INVBAR
    +FLOATBOB
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.Pickupmessage "You got a Time Sphere!"
    Inventory.PickupSound "powerups/time"
    Inventory.Icon "TIME"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        TIME ABCDCB 4 bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 2 A_SpawnItemEx("DRPGTimeFreezerSound")
        TNT1 A 2 A_GiveInventory("DRPGTimeFreezer", 1)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    }
}

// Regeneration Sphere
actor DRPGRegenSphere : CustomInventory 25053
{
    Tag "Regeneration Sphere - Quickly regenerates HP and EP"
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got a Regeneration Sphere!"
    Inventory.PickupSound "powerups/regen"
    Inventory.UseSound "powerups/regen"
    Inventory.Icon "REGN"

    +INVBAR
    +FLOATBOB
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        REGN ABCDCB 4 Bright
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIf(CallACS("GetStimPowerupActive"), "UseFail")
        TNT1 A 0 ACS_NamedExecute("RegenBoost", 0)
        Stop
    UseFail:
        TNT1 A 0
        Fail
    }
}

// Radiation Suit
Actor DRPGRadSuitPower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER
    
    Powerup.Type IronFeet
    Powerup.Color 0, 255, 0, 0.015
}

ACTOR DRPGRadSuit : CustomInventory Replaces Radsuit
{
    Tag "Radiation Suit - Protects against Damaging Environments"

    +INVBAR
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got a Radiation Suit!"
    Inventory.PickupSound "powerups/suit"
    Inventory.UseSound "powerups/suit"
    Inventory.Icon "SUIT"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        SUIT A -1 Bright
        Stop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_GiveInventory("DRPGRadSuitPower", 1)
        Stop
    }
}   

// IR Goggles
Actor DRPGInfraredPower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ADDITIVETIME
    +INVENTORY.PERSISTENTPOWER

    Powerup.Type LightAmp
}

ACTOR DRPGInfrared : CustomInventory Replaces Infrared
{
    Tag "Night-Vision Goggles - See in the Dark"
    
    +INVBAR
    -COUNTITEM
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got a pair of Infrared Goggles!"
    Inventory.PickupSound "powerups/light"
    Inventory.UseSound "powerups/light" 
    Inventory.Icon "PVIS"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PVIS A 6 Bright
        PVIS B 6
        Goto Spawn+1
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_GiveInventory("DRPGInfraredPower", 1)
        Stop
    }
}

// Computer Area Map and Scanner
actor DRPGAllMap : AllMap Replaces AllMap
{
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.FANCYPICKUPSOUND
    +INVENTORY.ALWAYSPICKUP
    
    Inventory.PickupMessage "You got a Computer Area Map!"
    Inventory.PickupSound "powerups/map"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        PMAP ABCDCB 6 Bright
        Goto Spawn+1
    Use:
        TNT1 A 1 A_GiveInventory("DRPGAllMapRevealer", 1)
//      TNT1 A 1 A_GiveInventory("DRPGAllMapScanner", 1)
        Stop
    }
}

actor DRPGAllMapRevealer : MapRevealer {}

actor DRPGAllMapScanner : PowerupGiver
{
    +INVENTORY.AUTOACTIVATE
    -INVENTORY.INVBAR
    Inventory.MaxAmount 0

    Powerup.Type Scanner
    Powerup.Duration -0x7FFFFFFF
}

// Berserk Pack
actor DRPGBerserk : Berserk Replaces Berserk
{
    Tag "Berserk Pack - Full Health and Increased Melee Damage"
    
    +INVBAR
    -INVENTORY.AUTOACTIVATE
    -INVENTORY.ALWAYSPICKUP
    
    Inventory.DefMaxAmount
    Inventory.InterHubAmount 1000
    Inventory.PickupMessage "You got a Berserk Pack!"
    Inventory.PickupSound "powerups/berserk"
    Inventory.UseSound "powerups/berserk"
    Inventory.Icon "PSTR"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
		PSTR A -1
        Stop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 2)
        TNT1 A 0 ACS_NamedExecuteAlways("AddToxicity", 0, 10)
        TNT1 A 0 ACS_NamedExecuteAlways("AMShieldCharge", 0)
        TNT1 A 0 ACS_NamedExecuteAlways("AddHealth", 0, 100, 100)
        TNT1 A 0 A_GiveInventory("PowerStrength")
        Stop
    }
}

// Wings
actor DRPGFlightPower : PowerupGiver
{
    Inventory.MaxAmount 0
    
    +INVENTORY.AUTOACTIVATE
    
    Powerup.Type Flight
    Powerup.Duration -0x7FFFFFFF
}

actor DRPGWings : CustomInventory 25054
{
    Tag "Wings - Allows Flight"
    
    +INVBAR
    +FLOATBOB

    Inventory.DefMaxAmount
    Inventory.PickupMessage "You got a pair of Wings!"
    Inventory.PickupSound "powerups/wings"
    Inventory.UseSound "powerups/wings"
    Inventory.Icon "WINGS"
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        WING A -1 Bright
        Stop
    Pickup:
        TNT1 A 0 ACS_NamedExecuteWithResult("CheckCapacity")
        Stop
    Use:
        TNT1 A 0 A_GiveInventory("DRPGFlightPower", 1)
        Stop
    }
}

// Megasphere
ACTOR DRPGMegasphere : CustomInventory Replaces MegaSphere
{
    RenderStyle Add
    
    Inventory.PickupMessage "You got a Megasphere!"
    Inventory.PickupSound "powerups/megasphere"
    
    -COUNTITEM
    
    States
    {
    Spawn:
        TNT1 A 0 NoDelay ACS_NamedExecuteAlways("ItemInit", 0)
        MEGA ABCD 6 BRIGHT
        Goto Spawn+1
    Pickup:
        TNT1 A 0 A_GiveInventory("DRPGSoulSphere3")
        TNT1 A 0 ACS_NamedExecuteAlways("AddEP", 0, 1000000)
        TNT1 A 0 ACS_NamedExecuteAlways("AddShield", 0, 1000000)
        TNT1 A 0 ACS_NamedExecuteAlways("AddMedkit", 0, 1000000)
        Stop
    }
}   

// Immunity Crystals
actor DRPGImmunityCrystalMelee : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Melee Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSA"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Melee Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS A 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamMelee",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamMelee",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityMelee", 512.0, RGF_PLAYERS)
        CRYS A 1 A_SpawnItemEx("DRPGImmunityCrystalPulseMelee", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalMelee", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalBullet : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Bullet Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSB"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Bullet Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS B 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamBullet",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamBullet",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityBullet", 512.0, RGF_PLAYERS)
        CRYS B 1 A_SpawnItemEx("DRPGImmunityCrystalPulseBullet", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBullet", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalFire : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Fire Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSC"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Fire Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS C 1 A_SpawnItemEx("DRPGImmunityCrystalPulseFire", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamFire",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamFire",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityFire", 512.0, RGF_PLAYERS)
        CRYS C 1 A_SpawnItemEx("DRPGImmunityCrystalPulseFire", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalFire", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalPlasma : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Plasma Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSD"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Plasma Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS D 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamPlasma",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamPlasma",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityPlasma", 512.0, RGF_PLAYERS)
        CRYS D 1 A_SpawnItemEx("DRPGImmunityCrystalPulsePlasma", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalPlasma", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalLightning : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Lightning Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSE"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Lightning Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS E 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamLightning",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamLightning",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityLightning", 512.0, RGF_PLAYERS)
        CRYS E 1 A_SpawnItemEx("DRPGImmunityCrystalPulseLightning", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalLightning", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalToxic : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Toxic Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSF"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Toxic Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS F 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamToxic",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamToxic",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityToxic", 512.0, RGF_PLAYERS)
        CRYS F 1 A_SpawnItemEx("DRPGImmunityCrystalPulseToxic", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalToxic", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGImmunityCrystalRadiation : CustomInventory
{
    Health 100
    Height 32
    Radius 16
    Mass 0x7FFFFFFF

    Inventory.Amount 1
    Inventory.MaxAmount 1
	Inventory.PickupMessage "Got a Radiation Immunity Crystal!"
	Inventory.PickupSound "powerups/crystal"
	Inventory.Icon "CRYSG"
    
    +INVBAR
    +BRIGHT
    +THRUACTORS
    +DONTGIB
    +SHOOTABLE
    +NOBLOOD
    -SPECIAL
    
    Tag "Radiation Immunity Crystal"
    
    States
    {
    Spawn:
		TNT1 A 0 NoDelay A_JumpIf(Abs(VelZ) <= 0.01, "FloorHit")
        CRYS G 1
        Loop
    FloorHit:
		TNT1 A 0 A_ChangeFlag("SPECIAL", true)
		TNT1 A 0 A_ChangeFlag("THRUACTORS", false)
    Spawn2:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamRadiation",
            Cos((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalBeamRadiation",
            Cos((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            Sin((CallACS("GetTimer") / 256.0 + 17.5) * 360.0) * 512,
            0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        TNT1 A 0 A_RadiusGive("DRPGPowerImmunityRadiation", 512.0, RGF_PLAYERS)
        CRYS G 1 A_SpawnItemEx("DRPGImmunityCrystalPulseRadiation", Random(-8, 8), Random(-8, 8), Random(-16, 8), 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Loop
    Use:
        TNT1 A 0 A_SpawnItemEx("DRPGImmunityCrystalRadiation", 0, 0, 40, 16, 0, 0, 0, SXF_SETMASTER)
        Stop
    Death:
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("DRPGImmunityCrystalDebris", 0, 0, Height / 2, Random(-8, 8), Random(-8, 8), 8, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor DRPGPowerImmunityBullet : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Bullet", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityMelee : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Melee", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityFire : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Fire", 0
    DamageFactor "Explosion", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityPlasma : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Plasma", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityLightning : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Electricity", 0
    DamageFactor "Electric", 0
    DamageFactor "Lightning", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityToxic : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Toxicity", 0
    DamageFactor "Slime", 0
	Powerup.Duration 35
}

actor DRPGPowerImmunityRadiation : PowerProtection
{
    +INVENTORY.AUTOACTIVATE
    
    DamageFactor "Radiation", 0
	Powerup.Duration 35
}
